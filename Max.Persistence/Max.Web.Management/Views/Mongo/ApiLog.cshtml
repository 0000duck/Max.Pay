@model Query<Max.Web.Management.Models.Mongo.ApiLogModel, Max.Web.Management.Models.Mongo.MongoApiLogParams>
@{
    ViewBag.Title = "APP接口日志";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="portlet">
    <div class="portlet-title">
        <div class="caption"><i class="fa fa-database"></i> ApiLog管理</div>
        <div class="tools"></div>
    </div>
    <div class="portlet-body">

        @using (Html.PageView("ApiLog", "Mongo", "MongoForm", "MongoContainer", "ApiLog_Partial", Model))
        {

            <div class="form-inline">
                <select onchange="return getCollection(this)" name="Params.database" class="form-control">
                    <option value="">-- Databases --</option>
                    @foreach (var database in ViewBag.ListDatabases)
                    {
                        <option value="@database">@database</option>
                    }
                </select>

                <select name="Params.collection" class="form-control">
                    <option value="">-- Collections --</option>
                </select>
            </div>

            <div class="form-inline margin-top-15">
                @Html.TextBoxFor(m => m.Params.UserId, new { @class = "form-control", placeholder = "用户ID" })
                @Html.TextBoxFor(m => m.Params.IDCard, new { @class = "form-control", placeholder = "身份证号码" })
                @Html.TextBoxFor(m => m.Params.InstitutionNo, new { @class = "form-control", placeholder = "机构号码" })
                @Html.TextBoxFor(m => m.Params.Mobile, new { @class = "form-control", placeholder = "手机号码" })
            </div>

            <div class="form-inline margin-top-15">

                @Html.TextBoxFor(m => m.Params.RealName, new { @class = "form-control", placeholder = "真实姓名" })
                @Html.TextBoxFor(m => m.Params.NickName, new { @class = "form-control", placeholder = "昵称" })
                @Html.TextBoxFor(m => m.Params.EPlusAccountId, new { @class = "form-control", placeholder = "E+账户ID" })

                @Html.DayTimePickerFor(m => m.Params.LogTimeStart, "日志开始时间", 2)
                @Html.DayTimePickerFor(m => m.Params.LogTimeEnd, "日志结束时间", 2)


            </div>

            <div class="form-inline margin-top-15">

                @*@Html.SelectFor(m => m.Params.GreaterThanLess, typeof(EGreaterThanLess))*@
                @Html.TextBoxFor(m => m.Params.Duration, new { @class = "form-control", placeholder = "耗时（毫秒）" })
                <select class="form-control" name="Params.IsError">
                    <option value="">是否异常</option>
                    <option value="0">否</option>
                    <option value="1">是</option>
                </select>
                <button type="submit" onclick="return SubmitCheck()" class="btn blue"><i class="fa fa-search"></i> 查询</button>
                <button type="reset" class="btn yellow"><i class="fa fa-undo"></i> 重置</button>
            </div>
        }

    </div>
</div>
<div id="DetailsDiv" class="modal fade-in-up"></div>

@section footer{
    <script type="text/javascript">

        $(function () {
            $("a[name='ShowDetails']").live("click", function () {
                var RequestDataStr = $(this).parent().find("input[name='RequestDataStr']").val();
                var RequestJson = $(this).parent().find("input[name='RequestJson']").val();
                var Response = $(this).parent().find("input[name='Response']").val();
                var UserDataStr = $(this).parent().find("input[name='UserDataStr']").val();
                var UserData = $(this).parent().find("input[name='UserData']").val();

                App.LoadModal("#DetailsDiv", "/Mongo/ApiLogDetails",
                    { RequestDataStr: RequestDataStr, RequestJson: RequestJson, Response: Response, UserDataStr: UserDataStr, UserData: UserData }, { width: 1200 });
            });
        });

        function getCollection(obj) {
            var db = $(obj).val();
            var $sel = $("select[name='Params.collection']")
            if (db != "") {
                $sel.html("");
                $.ajax({
                    type: "POST",
                    url: "/Mongo/ListConnectionsForAjax",
                    data: { database: db, },
                    success: function (data, textStatus) {
                        var optionHtml;
                        $.each(data, function (i, item) {
                            optionHtml += "<option value=" + item + ">" + item + "</option>";
                        });
                        $sel.html(optionHtml);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        App.Alert("error");
                    }
                })
            } else { $sel.html(""); }
        }

        function SubmitCheck() {
            var $sel_db = $("select[name='Params.database']");
            var $sel_collection = $("select[name='Params.collection']");

            if ($sel_db.val() == "") {
                App.Alert('请选择database！');
                return false;
            }
            if ($sel_collection.val() == "") {
                App.Alert('请选择collection！');
                return false;
            }
        }
    </script>
}


