@model Max.Web.Management.Models.Account.AccountAddModel
@{
    var POST_Action = "AddForAjax";
    var TITLE =  "新增管理员";
}
@using (Html.BeginForm(POST_Action, "Account", FormMethod.Post, new { id = "AddUserForm", @class = "form-horizontal form-bordered" }))
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
        <h4 class="modal-title"><i class="fa fa-bars"></i> @TITLE</h4>
    </div>
    <div class="modal-body form form-horizontal form-bordered">
        
        @Html.HiddenFor(m => m.CreateTime)
        <div class="form-group margin-top-15">
            <label class="control-label col-md-3">姓名</label>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.RealName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.RealName)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">账号</label>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.UserName)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">密码</label>
            <div class="col-md-8">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })           
                 @Html.ValidationMessageFor(m => m.Password)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">确认密码</label>
            <div class="col-md-8">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
               @Html.ValidationMessageFor(m => m.ConfirmPassword)
                
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">账号类型</label>
            <div class="col-md-8">
                @Html.SelectFor(m => m.UserType, typeof(Max.Models.System.Common.UserType))
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">账号状态</label>
            <div class="col-md-8">
                @Html.SelectFor(m => m.Status, typeof(Max.Models.System.Common.UserStatus))
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">Email</label>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">手机</label>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Mobile)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">注册时间</label>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.CreateTime, new { @class = "form-control", disabled="disabled" })
                @Html.ValidationMessageFor(m => m.CreateTime)
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" data-dismiss="modal" class="btn btn-default">取消</button>
        <button type="submit" class="btn btn-primary"><i class="fa fa-check"></i> @TITLE</button>
    </div>
}